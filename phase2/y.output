Terminals unused in grammar

   FOR


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: PROGRAM $end

    1 PROGRAM: FUNCTION_LOOP
    2        | %empty

    3 FUNCTION_LOOP: FUNCTIONS FUNCTION_LOOP
    4              | %empty

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    6 IDENTIFIER_LOOP: IDENT
    7                | IDENT "," IDENTIFIER_LOOP

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" NUMBER "]" OF INTEGER
    9            | IDENTIFIER_LOOP ":" INTEGER
   10            | IDENTIFIER_LOOP ":" ENUM "(" IDENTIFIER_LOOP ")"
   11            | error

   12 DECLARATION_LOOP: DECLARATION ";" DECLARATION_LOOP
   13                 | %empty

   14 STATEMENT: VAR ":=" EXPRESSION
   15          | IF BOOL-EXPR THEN STATEMENT_LOOP ELSE_BRANCH ENDIF
   16          | WHILE BOOL-EXPR BEGINLOOP STATEMENT_LOOP ENDLOOP
   17          | DO BEGINLOOP STATEMENT_LOOP ENDLOOP WHILE BOOL-EXPR
   18          | READ VAR_LOOP
   19          | WRITE VAR_LOOP
   20          | CONTINUE
   21          | RETURN EXPRESSION

   22 ELSE_BRANCH: ELSE STATEMENT_LOOP
   23            | %empty

   24 STATEMENT_LOOP: STATEMENT ";" STATEMENT_LOOP
   25               | STATEMENT ";"

   26 BOOL-EXPR: RELATION-AND-EXPR
   27          | RELATION-AND-EXPR OR BOOL-EXPR

   28 RELATION-AND-EXPR: RELATION-EXPR
   29                  | RELATION-EXPR AND RELATION-AND-EXPR

   30 RELATION-EXPR: NOT RELATION_EXPR_BODY
   31              | RELATION_EXPR_BODY

   32 RELATION_EXPR_BODY: EXPRESSION COMP EXPRESSION
   33                   | TRUE
   34                   | FALSE
   35                   | "(" BOOL-EXPR ")"

   36 COMP: "="
   37     | "!="
   38     | "<"
   39     | ">"
   40     | "<="
   41     | ">="

   42 EXPRESSION: MULTIPLICATIVE_EXPR
   43           | MULTIPLICATIVE_EXPR "+" EXPRESSION
   44           | MULTIPLICATIVE_EXPR "-" EXPRESSION

   45 EXPRESSION_LOOP: EXPRESSION
   46                | EXPRESSION "," EXPRESSION_LOOP
   47                | %empty

   48 MULTIPLICATIVE_EXPR: TERM
   49                    | TERM "*" MULTIPLICATIVE_EXPR
   50                    | TERM "/" MULTIPLICATIVE_EXPR
   51                    | TERM "%" MULTIPLICATIVE_EXPR

   52 TERM: VAR
   53     | NUMBER
   54     | "(" EXPRESSION ")"
   55     | "-" VAR
   56     | "-" NUMBER
   57     | "-" "(" EXPRESSION ")"
   58     | IDENT "(" EXPRESSION_LOOP ")"

   59 VAR_LOOP: VAR
   60         | VAR "," VAR_LOOP

   61 VAR: IDENT
   62    | IDENT "[" EXPRESSION "]"


Terminals, with rules where they appear

$end (0) 0
error (256) 11
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 8 9
ARRAY (266) 8
ENUM (267) 10
OF (268) 8
IF (269) 15
THEN (270) 15
ENDIF (271) 15
ELSE (272) 22
FOR (273)
WHILE (274) 16 17
DO (275) 17
BEGINLOOP (276) 16 17
ENDLOOP (277) 16 17
CONTINUE (278) 20
READ (279) 18
WRITE (280) 19
AND (281) 29
OR (282) 27
NOT (283) 30
TRUE (284) 33
FALSE (285) 34
RETURN (286) 21
"-" (287) 44 55 56 57
"+" (288) 43
"*" (289) 49
"/" (290) 50
"%" (291) 51
"=" (292) 36
"!=" (293) 37
"<" (294) 38
">" (295) 39
"<=" (296) 40
">=" (297) 41
IDENT (298) 5 6 7 58 61 62
NUMBER (299) 8 53 56
";" (300) 5 12 24 25
":" (301) 8 9 10
"," (302) 7 46 60
"(" (303) 10 35 54 57 58
")" (304) 10 35 54 57 58
"[" (305) 8 62
"]" (306) 8 62
":=" (307) 14
UMINUS (308)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
PROGRAM (55)
    on left: 1 2, on right: 0
FUNCTION_LOOP (56)
    on left: 3 4, on right: 1 3
FUNCTIONS (57)
    on left: 5, on right: 3
IDENTIFIER_LOOP (58)
    on left: 6 7, on right: 7 8 9 10
DECLARATION (59)
    on left: 8 9 10 11, on right: 12
DECLARATION_LOOP (60)
    on left: 12 13, on right: 5 12
STATEMENT (61)
    on left: 14 15 16 17 18 19 20 21, on right: 24 25
ELSE_BRANCH (62)
    on left: 22 23, on right: 15
STATEMENT_LOOP (63)
    on left: 24 25, on right: 5 15 16 17 22 24
BOOL-EXPR (64)
    on left: 26 27, on right: 15 16 17 27 35
RELATION-AND-EXPR (65)
    on left: 28 29, on right: 26 27 29
RELATION-EXPR (66)
    on left: 30 31, on right: 28 29
RELATION_EXPR_BODY (67)
    on left: 32 33 34 35, on right: 30 31
COMP (68)
    on left: 36 37 38 39 40 41, on right: 32
EXPRESSION (69)
    on left: 42 43 44, on right: 14 21 32 43 44 45 46 54 57 62
EXPRESSION_LOOP (70)
    on left: 45 46 47, on right: 46 58
MULTIPLICATIVE_EXPR (71)
    on left: 48 49 50 51, on right: 42 43 44 49 50 51
TERM (72)
    on left: 52 53 54 55 56 57 58, on right: 48 49 50 51
VAR_LOOP (73)
    on left: 59 60, on right: 18 19 60
VAR (74)
    on left: 61 62, on right: 14 52 55 59 60


State 0

    0 $accept: . PROGRAM $end

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 2 (PROGRAM)
    $end      [reduce using rule 4 (FUNCTION_LOOP)]
    $default  reduce using rule 2 (PROGRAM)

    PROGRAM        go to state 2
    FUNCTION_LOOP  go to state 3
    FUNCTIONS      go to state 4


State 1

    5 FUNCTIONS: FUNCTION . IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: PROGRAM . $end

    $end  shift, and go to state 6


State 3

    1 PROGRAM: FUNCTION_LOOP .

    $default  reduce using rule 1 (PROGRAM)


State 4

    3 FUNCTION_LOOP: FUNCTIONS . FUNCTION_LOOP

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 4 (FUNCTION_LOOP)

    FUNCTION_LOOP  go to state 7
    FUNCTIONS      go to state 4


State 5

    5 FUNCTIONS: FUNCTION IDENT . ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    ";"  shift, and go to state 8


State 6

    0 $accept: PROGRAM $end .

    $default  accept


State 7

    3 FUNCTION_LOOP: FUNCTIONS FUNCTION_LOOP .

    $default  reduce using rule 3 (FUNCTION_LOOP)


State 8

    5 FUNCTIONS: FUNCTION IDENT ";" . BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS . DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 13 (DECLARATION_LOOP)

    IDENTIFIER_LOOP   go to state 12
    DECLARATION       go to state 13
    DECLARATION_LOOP  go to state 14


State 10

   11 DECLARATION: error .

    $default  reduce using rule 11 (DECLARATION)


State 11

    6 IDENTIFIER_LOOP: IDENT .
    7                | IDENT . "," IDENTIFIER_LOOP

    ","  shift, and go to state 15

    $default  reduce using rule 6 (IDENTIFIER_LOOP)


State 12

    8 DECLARATION: IDENTIFIER_LOOP . ":" ARRAY "[" NUMBER "]" OF INTEGER
    9            | IDENTIFIER_LOOP . ":" INTEGER
   10            | IDENTIFIER_LOOP . ":" ENUM "(" IDENTIFIER_LOOP ")"

    ":"  shift, and go to state 16


State 13

   12 DECLARATION_LOOP: DECLARATION . ";" DECLARATION_LOOP

    ";"  shift, and go to state 17


State 14

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP . END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    7 IDENTIFIER_LOOP: IDENT "," . IDENTIFIER_LOOP

    IDENT  shift, and go to state 11

    IDENTIFIER_LOOP  go to state 19


State 16

    8 DECLARATION: IDENTIFIER_LOOP ":" . ARRAY "[" NUMBER "]" OF INTEGER
    9            | IDENTIFIER_LOOP ":" . INTEGER
   10            | IDENTIFIER_LOOP ":" . ENUM "(" IDENTIFIER_LOOP ")"

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21
    ENUM     shift, and go to state 22


State 17

   12 DECLARATION_LOOP: DECLARATION ";" . DECLARATION_LOOP

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_PARAMS  reduce using rule 13 (DECLARATION_LOOP)
    END_LOCALS  reduce using rule 13 (DECLARATION_LOOP)

    IDENTIFIER_LOOP   go to state 12
    DECLARATION       go to state 13
    DECLARATION_LOOP  go to state 23


State 18

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS . BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    BEGIN_LOCALS  shift, and go to state 24


State 19

    7 IDENTIFIER_LOOP: IDENT "," IDENTIFIER_LOOP .

    $default  reduce using rule 7 (IDENTIFIER_LOOP)


State 20

    9 DECLARATION: IDENTIFIER_LOOP ":" INTEGER .

    $default  reduce using rule 9 (DECLARATION)


State 21

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY . "[" NUMBER "]" OF INTEGER

    "["  shift, and go to state 25


State 22

   10 DECLARATION: IDENTIFIER_LOOP ":" ENUM . "(" IDENTIFIER_LOOP ")"

    "("  shift, and go to state 26


State 23

   12 DECLARATION_LOOP: DECLARATION ";" DECLARATION_LOOP .

    $default  reduce using rule 12 (DECLARATION_LOOP)


State 24

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS . DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    error  shift, and go to state 10
    IDENT  shift, and go to state 11

    END_LOCALS  reduce using rule 13 (DECLARATION_LOOP)

    IDENTIFIER_LOOP   go to state 12
    DECLARATION       go to state 13
    DECLARATION_LOOP  go to state 27


State 25

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" . NUMBER "]" OF INTEGER

    NUMBER  shift, and go to state 28


State 26

   10 DECLARATION: IDENTIFIER_LOOP ":" ENUM "(" . IDENTIFIER_LOOP ")"

    IDENT  shift, and go to state 11

    IDENTIFIER_LOOP  go to state 29


State 27

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP . END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY

    END_LOCALS  shift, and go to state 30


State 28

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" NUMBER . "]" OF INTEGER

    "]"  shift, and go to state 31


State 29

   10 DECLARATION: IDENTIFIER_LOOP ":" ENUM "(" IDENTIFIER_LOOP . ")"

    ")"  shift, and go to state 32


State 30

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS . BEGIN_BODY STATEMENT_LOOP END_BODY

    BEGIN_BODY  shift, and go to state 33


State 31

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" NUMBER "]" . OF INTEGER

    OF  shift, and go to state 34


State 32

   10 DECLARATION: IDENTIFIER_LOOP ":" ENUM "(" IDENTIFIER_LOOP ")" .

    $default  reduce using rule 10 (DECLARATION)


State 33

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY . STATEMENT_LOOP END_BODY

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 44
    VAR             go to state 45


State 34

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" NUMBER "]" OF . INTEGER

    INTEGER  shift, and go to state 46


State 35

   15 STATEMENT: IF . BOOL-EXPR THEN STATEMENT_LOOP ELSE_BRANCH ENDIF

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    BOOL-EXPR            go to state 54
    RELATION-AND-EXPR    go to state 55
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 36

   16 STATEMENT: WHILE . BOOL-EXPR BEGINLOOP STATEMENT_LOOP ENDLOOP

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    BOOL-EXPR            go to state 62
    RELATION-AND-EXPR    go to state 55
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 37

   17 STATEMENT: DO . BEGINLOOP STATEMENT_LOOP ENDLOOP WHILE BOOL-EXPR

    BEGINLOOP  shift, and go to state 63


State 38

   20 STATEMENT: CONTINUE .

    $default  reduce using rule 20 (STATEMENT)


State 39

   18 STATEMENT: READ . VAR_LOOP

    IDENT  shift, and go to state 42

    VAR_LOOP  go to state 64
    VAR       go to state 65


State 40

   19 STATEMENT: WRITE . VAR_LOOP

    IDENT  shift, and go to state 42

    VAR_LOOP  go to state 66
    VAR       go to state 65


State 41

   21 STATEMENT: RETURN . EXPRESSION

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 68
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 42

   61 VAR: IDENT .
   62    | IDENT . "[" EXPRESSION "]"

    "["  shift, and go to state 69

    $default  reduce using rule 61 (VAR)


State 43

   24 STATEMENT_LOOP: STATEMENT . ";" STATEMENT_LOOP
   25               | STATEMENT . ";"

    ";"  shift, and go to state 70


State 44

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP . END_BODY

    END_BODY  shift, and go to state 71


State 45

   14 STATEMENT: VAR . ":=" EXPRESSION

    ":="  shift, and go to state 72


State 46

    8 DECLARATION: IDENTIFIER_LOOP ":" ARRAY "[" NUMBER "]" OF INTEGER .

    $default  reduce using rule 8 (DECLARATION)


State 47

   30 RELATION-EXPR: NOT . RELATION_EXPR_BODY

    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    RELATION_EXPR_BODY   go to state 73
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 48

   33 RELATION_EXPR_BODY: TRUE .

    $default  reduce using rule 33 (RELATION_EXPR_BODY)


State 49

   34 RELATION_EXPR_BODY: FALSE .

    $default  reduce using rule 34 (RELATION_EXPR_BODY)


State 50

   55 TERM: "-" . VAR
   56     | "-" . NUMBER
   57     | "-" . "(" EXPRESSION ")"

    IDENT   shift, and go to state 42
    NUMBER  shift, and go to state 74
    "("     shift, and go to state 75

    VAR  go to state 76


State 51

   58 TERM: IDENT . "(" EXPRESSION_LOOP ")"
   61 VAR: IDENT .
   62    | IDENT . "[" EXPRESSION "]"

    "("  shift, and go to state 77
    "["  shift, and go to state 69

    $default  reduce using rule 61 (VAR)


State 52

   53 TERM: NUMBER .

    $default  reduce using rule 53 (TERM)


State 53

   35 RELATION_EXPR_BODY: "(" . BOOL-EXPR ")"
   54 TERM: "(" . EXPRESSION ")"

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    BOOL-EXPR            go to state 78
    RELATION-AND-EXPR    go to state 55
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 79
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 54

   15 STATEMENT: IF BOOL-EXPR . THEN STATEMENT_LOOP ELSE_BRANCH ENDIF

    THEN  shift, and go to state 80


State 55

   26 BOOL-EXPR: RELATION-AND-EXPR .
   27          | RELATION-AND-EXPR . OR BOOL-EXPR

    OR  shift, and go to state 81

    $default  reduce using rule 26 (BOOL-EXPR)


State 56

   28 RELATION-AND-EXPR: RELATION-EXPR .
   29                  | RELATION-EXPR . AND RELATION-AND-EXPR

    AND  shift, and go to state 82

    $default  reduce using rule 28 (RELATION-AND-EXPR)


State 57

   31 RELATION-EXPR: RELATION_EXPR_BODY .

    $default  reduce using rule 31 (RELATION-EXPR)


State 58

   32 RELATION_EXPR_BODY: EXPRESSION . COMP EXPRESSION

    "="   shift, and go to state 83
    "!="  shift, and go to state 84
    "<"   shift, and go to state 85
    ">"   shift, and go to state 86
    "<="  shift, and go to state 87
    ">="  shift, and go to state 88

    COMP  go to state 89


State 59

   42 EXPRESSION: MULTIPLICATIVE_EXPR .
   43           | MULTIPLICATIVE_EXPR . "+" EXPRESSION
   44           | MULTIPLICATIVE_EXPR . "-" EXPRESSION

    "-"  shift, and go to state 90
    "+"  shift, and go to state 91

    $default  reduce using rule 42 (EXPRESSION)


State 60

   48 MULTIPLICATIVE_EXPR: TERM .
   49                    | TERM . "*" MULTIPLICATIVE_EXPR
   50                    | TERM . "/" MULTIPLICATIVE_EXPR
   51                    | TERM . "%" MULTIPLICATIVE_EXPR

    "*"  shift, and go to state 92
    "/"  shift, and go to state 93
    "%"  shift, and go to state 94

    $default  reduce using rule 48 (MULTIPLICATIVE_EXPR)


State 61

   52 TERM: VAR .

    $default  reduce using rule 52 (TERM)


State 62

   16 STATEMENT: WHILE BOOL-EXPR . BEGINLOOP STATEMENT_LOOP ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 63

   17 STATEMENT: DO BEGINLOOP . STATEMENT_LOOP ENDLOOP WHILE BOOL-EXPR

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 96
    VAR             go to state 45


State 64

   18 STATEMENT: READ VAR_LOOP .

    $default  reduce using rule 18 (STATEMENT)


State 65

   59 VAR_LOOP: VAR .
   60         | VAR . "," VAR_LOOP

    ","  shift, and go to state 97

    $default  reduce using rule 59 (VAR_LOOP)


State 66

   19 STATEMENT: WRITE VAR_LOOP .

    $default  reduce using rule 19 (STATEMENT)


State 67

   54 TERM: "(" . EXPRESSION ")"

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 98
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 68

   21 STATEMENT: RETURN EXPRESSION .

    $default  reduce using rule 21 (STATEMENT)


State 69

   62 VAR: IDENT "[" . EXPRESSION "]"

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 99
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 70

   24 STATEMENT_LOOP: STATEMENT ";" . STATEMENT_LOOP
   25               | STATEMENT ";" .

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 25 (STATEMENT_LOOP)

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 100
    VAR             go to state 45


State 71

    5 FUNCTIONS: FUNCTION IDENT ";" BEGIN_PARAMS DECLARATION_LOOP END_PARAMS BEGIN_LOCALS DECLARATION_LOOP END_LOCALS BEGIN_BODY STATEMENT_LOOP END_BODY .

    $default  reduce using rule 5 (FUNCTIONS)


State 72

   14 STATEMENT: VAR ":=" . EXPRESSION

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 101
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 73

   30 RELATION-EXPR: NOT RELATION_EXPR_BODY .

    $default  reduce using rule 30 (RELATION-EXPR)


State 74

   56 TERM: "-" NUMBER .

    $default  reduce using rule 56 (TERM)


State 75

   57 TERM: "-" "(" . EXPRESSION ")"

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 102
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 76

   55 TERM: "-" VAR .

    $default  reduce using rule 55 (TERM)


State 77

   58 TERM: IDENT "(" . EXPRESSION_LOOP ")"

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    $default  reduce using rule 47 (EXPRESSION_LOOP)

    EXPRESSION           go to state 103
    EXPRESSION_LOOP      go to state 104
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 78

   35 RELATION_EXPR_BODY: "(" BOOL-EXPR . ")"

    ")"  shift, and go to state 105


State 79

   32 RELATION_EXPR_BODY: EXPRESSION . COMP EXPRESSION
   54 TERM: "(" EXPRESSION . ")"

    "="   shift, and go to state 83
    "!="  shift, and go to state 84
    "<"   shift, and go to state 85
    ">"   shift, and go to state 86
    "<="  shift, and go to state 87
    ">="  shift, and go to state 88
    ")"   shift, and go to state 106

    COMP  go to state 89


State 80

   15 STATEMENT: IF BOOL-EXPR THEN . STATEMENT_LOOP ELSE_BRANCH ENDIF

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 107
    VAR             go to state 45


State 81

   27 BOOL-EXPR: RELATION-AND-EXPR OR . BOOL-EXPR

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    BOOL-EXPR            go to state 108
    RELATION-AND-EXPR    go to state 55
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 82

   29 RELATION-AND-EXPR: RELATION-EXPR AND . RELATION-AND-EXPR

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    RELATION-AND-EXPR    go to state 109
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 83

   36 COMP: "=" .

    $default  reduce using rule 36 (COMP)


State 84

   37 COMP: "!=" .

    $default  reduce using rule 37 (COMP)


State 85

   38 COMP: "<" .

    $default  reduce using rule 38 (COMP)


State 86

   39 COMP: ">" .

    $default  reduce using rule 39 (COMP)


State 87

   40 COMP: "<=" .

    $default  reduce using rule 40 (COMP)


State 88

   41 COMP: ">=" .

    $default  reduce using rule 41 (COMP)


State 89

   32 RELATION_EXPR_BODY: EXPRESSION COMP . EXPRESSION

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 110
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 90

   44 EXPRESSION: MULTIPLICATIVE_EXPR "-" . EXPRESSION

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 111
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 91

   43 EXPRESSION: MULTIPLICATIVE_EXPR "+" . EXPRESSION

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    EXPRESSION           go to state 112
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 92

   49 MULTIPLICATIVE_EXPR: TERM "*" . MULTIPLICATIVE_EXPR

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    MULTIPLICATIVE_EXPR  go to state 113
    TERM                 go to state 60
    VAR                  go to state 61


State 93

   50 MULTIPLICATIVE_EXPR: TERM "/" . MULTIPLICATIVE_EXPR

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    MULTIPLICATIVE_EXPR  go to state 114
    TERM                 go to state 60
    VAR                  go to state 61


State 94

   51 MULTIPLICATIVE_EXPR: TERM "%" . MULTIPLICATIVE_EXPR

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    MULTIPLICATIVE_EXPR  go to state 115
    TERM                 go to state 60
    VAR                  go to state 61


State 95

   16 STATEMENT: WHILE BOOL-EXPR BEGINLOOP . STATEMENT_LOOP ENDLOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 116
    VAR             go to state 45


State 96

   17 STATEMENT: DO BEGINLOOP STATEMENT_LOOP . ENDLOOP WHILE BOOL-EXPR

    ENDLOOP  shift, and go to state 117


State 97

   60 VAR_LOOP: VAR "," . VAR_LOOP

    IDENT  shift, and go to state 42

    VAR_LOOP  go to state 118
    VAR       go to state 65


State 98

   54 TERM: "(" EXPRESSION . ")"

    ")"  shift, and go to state 106


State 99

   62 VAR: IDENT "[" EXPRESSION . "]"

    "]"  shift, and go to state 119


State 100

   24 STATEMENT_LOOP: STATEMENT ";" STATEMENT_LOOP .

    $default  reduce using rule 24 (STATEMENT_LOOP)


State 101

   14 STATEMENT: VAR ":=" EXPRESSION .

    $default  reduce using rule 14 (STATEMENT)


State 102

   57 TERM: "-" "(" EXPRESSION . ")"

    ")"  shift, and go to state 120


State 103

   45 EXPRESSION_LOOP: EXPRESSION .
   46                | EXPRESSION . "," EXPRESSION_LOOP

    ","  shift, and go to state 121

    $default  reduce using rule 45 (EXPRESSION_LOOP)


State 104

   58 TERM: IDENT "(" EXPRESSION_LOOP . ")"

    ")"  shift, and go to state 122


State 105

   35 RELATION_EXPR_BODY: "(" BOOL-EXPR ")" .

    $default  reduce using rule 35 (RELATION_EXPR_BODY)


State 106

   54 TERM: "(" EXPRESSION ")" .

    $default  reduce using rule 54 (TERM)


State 107

   15 STATEMENT: IF BOOL-EXPR THEN STATEMENT_LOOP . ELSE_BRANCH ENDIF

    ELSE  shift, and go to state 123

    $default  reduce using rule 23 (ELSE_BRANCH)

    ELSE_BRANCH  go to state 124


State 108

   27 BOOL-EXPR: RELATION-AND-EXPR OR BOOL-EXPR .

    $default  reduce using rule 27 (BOOL-EXPR)


State 109

   29 RELATION-AND-EXPR: RELATION-EXPR AND RELATION-AND-EXPR .

    $default  reduce using rule 29 (RELATION-AND-EXPR)


State 110

   32 RELATION_EXPR_BODY: EXPRESSION COMP EXPRESSION .

    $default  reduce using rule 32 (RELATION_EXPR_BODY)


State 111

   44 EXPRESSION: MULTIPLICATIVE_EXPR "-" EXPRESSION .

    $default  reduce using rule 44 (EXPRESSION)


State 112

   43 EXPRESSION: MULTIPLICATIVE_EXPR "+" EXPRESSION .

    $default  reduce using rule 43 (EXPRESSION)


State 113

   49 MULTIPLICATIVE_EXPR: TERM "*" MULTIPLICATIVE_EXPR .

    $default  reduce using rule 49 (MULTIPLICATIVE_EXPR)


State 114

   50 MULTIPLICATIVE_EXPR: TERM "/" MULTIPLICATIVE_EXPR .

    $default  reduce using rule 50 (MULTIPLICATIVE_EXPR)


State 115

   51 MULTIPLICATIVE_EXPR: TERM "%" MULTIPLICATIVE_EXPR .

    $default  reduce using rule 51 (MULTIPLICATIVE_EXPR)


State 116

   16 STATEMENT: WHILE BOOL-EXPR BEGINLOOP STATEMENT_LOOP . ENDLOOP

    ENDLOOP  shift, and go to state 125


State 117

   17 STATEMENT: DO BEGINLOOP STATEMENT_LOOP ENDLOOP . WHILE BOOL-EXPR

    WHILE  shift, and go to state 126


State 118

   60 VAR_LOOP: VAR "," VAR_LOOP .

    $default  reduce using rule 60 (VAR_LOOP)


State 119

   62 VAR: IDENT "[" EXPRESSION "]" .

    $default  reduce using rule 62 (VAR)


State 120

   57 TERM: "-" "(" EXPRESSION ")" .

    $default  reduce using rule 57 (TERM)


State 121

   46 EXPRESSION_LOOP: EXPRESSION "," . EXPRESSION_LOOP

    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 67

    $default  reduce using rule 47 (EXPRESSION_LOOP)

    EXPRESSION           go to state 103
    EXPRESSION_LOOP      go to state 127
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 122

   58 TERM: IDENT "(" EXPRESSION_LOOP ")" .

    $default  reduce using rule 58 (TERM)


State 123

   22 ELSE_BRANCH: ELSE . STATEMENT_LOOP

    IF        shift, and go to state 35
    WHILE     shift, and go to state 36
    DO        shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    STATEMENT       go to state 43
    STATEMENT_LOOP  go to state 128
    VAR             go to state 45


State 124

   15 STATEMENT: IF BOOL-EXPR THEN STATEMENT_LOOP ELSE_BRANCH . ENDIF

    ENDIF  shift, and go to state 129


State 125

   16 STATEMENT: WHILE BOOL-EXPR BEGINLOOP STATEMENT_LOOP ENDLOOP .

    $default  reduce using rule 16 (STATEMENT)


State 126

   17 STATEMENT: DO BEGINLOOP STATEMENT_LOOP ENDLOOP WHILE . BOOL-EXPR

    NOT     shift, and go to state 47
    TRUE    shift, and go to state 48
    FALSE   shift, and go to state 49
    "-"     shift, and go to state 50
    IDENT   shift, and go to state 51
    NUMBER  shift, and go to state 52
    "("     shift, and go to state 53

    BOOL-EXPR            go to state 130
    RELATION-AND-EXPR    go to state 55
    RELATION-EXPR        go to state 56
    RELATION_EXPR_BODY   go to state 57
    EXPRESSION           go to state 58
    MULTIPLICATIVE_EXPR  go to state 59
    TERM                 go to state 60
    VAR                  go to state 61


State 127

   46 EXPRESSION_LOOP: EXPRESSION "," EXPRESSION_LOOP .

    $default  reduce using rule 46 (EXPRESSION_LOOP)


State 128

   22 ELSE_BRANCH: ELSE STATEMENT_LOOP .

    $default  reduce using rule 22 (ELSE_BRANCH)


State 129

   15 STATEMENT: IF BOOL-EXPR THEN STATEMENT_LOOP ELSE_BRANCH ENDIF .

    $default  reduce using rule 15 (STATEMENT)


State 130

   17 STATEMENT: DO BEGINLOOP STATEMENT_LOOP ENDLOOP WHILE BOOL-EXPR .

    $default  reduce using rule 17 (STATEMENT)
